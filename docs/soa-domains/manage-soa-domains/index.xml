<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Manage SOA Domains on Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/soa-domains/manage-soa-domains/</link>
    <description>Recent content in Manage SOA Domains on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/soa-domains/manage-soa-domains/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuring a load balancer for SOA Domains</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/configuring-load-balancer/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/configuring-load-balancer/</guid>
      <description>An Ingress based load balancer can be configured to access the Oracle SOA and Oracle Service Bus domain application URLs. Refer to the setup Ingress document for details.
As part of the ingress-per-domain setup for Oracle SOA and Oracle Service Bus domains, the values.yaml file (under the ingress-per-domain directory) needs to be updated with the appropriate values from your environment. A sample values.yaml file (for the Traefik load balancer) is shown below:</description>
    </item>
    
    <item>
      <title>Monitoring a SOA domain</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/monitoring-soa-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/monitoring-soa-domains/</guid>
      <description>After the SOA domain is set up, you can:
 Monitor the SOA instance using Prometheus and Grafana. See Monitoring a domain. Publish operator and WebLogic Server logs into Elasticsearch and interact with them in Kibana. See Publish logs to Elasticsearch.  </description>
    </item>
    
    <item>
      <title>Delete the SOA domain home</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/delete-domain-home/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/delete-domain-home/</guid>
      <description>Sometimes in production, but most likely in testing environments, you might want to remove the domain home that is generated using the create-domain.sh script. Do this by running the generated delete domain job script in the /&amp;lt;path to weblogic-operator-output-directory&amp;gt;/weblogic-domains/&amp;lt;domainUID&amp;gt; directory.
$ kubectl create -f delete-domain-job.yaml </description>
    </item>
    
    <item>
      <title>Deploying SOA Composites from Oracle JDeveloper</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/supportjdev/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/supportjdev/</guid>
      <description>This documents provides steps to deploy SOA composite applications from Oracle JDeveloper (that runs outside the Kubernetes network) to the SOA instance in WebLogic Kubernetes Operator Environment.
Note: Dev and Test environment only. For production you should deploy using Application Control and WLST methods. Deploy to SOA from JDeveloper To deploy SOA composites/applications from Oracle JDeveloper, Administration Server should have been configured to expose a T3 channel using the exposeAdminT3Channel setting when creating the domain, then the matching T3 service can be used to connect.</description>
    </item>
    
    <item>
      <title>Expose T3 protocol for Managed Servers</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/enablingt3/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/enablingt3/</guid>
      <description>T3 ports for Managed Servers in Oracle SOA deployed in WebLogic Kubernetes operator Environment are not available by default. This document provides steps to create T3 channel and the corresponding Kubernetes Service to expose the T3 protocol for Managed Servers in SOA Domain.
With the following steps you will be creating T3 port at 30014 on all Managed Servers for soa_cluster with below details:
 Name: T3Channel_MS Listen Port: 30014 External Listen Address: &amp;lt;Master IP Address&amp;gt; External Listen Port: 30014  Note: In case you are using different NodePort to expose T3 for Managed Server externally, then use same value for &amp;quot;External Listen Port&amp;quot;</description>
    </item>
    
    <item>
      <title>Persisting SOA Adapters Customizations</title>
      <link>/fmw-kubernetes/soa-domains/manage-soa-domains/persisting-soa-adapters-customizations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/manage-soa-domains/persisting-soa-adapters-customizations/</guid>
      <description>The lifetime for any customization done in a file on a server pod is upto the lifetime of that pod, the changes are not persisted once the pod goes down or restarted.
For example: Below configuration updates DbAdapter.rar to create a new connection instance and creates DatasSource CoffeeShop on Administration Console for the same with jdbc/CoffeeShopDS.
file location: /u01/oracle/soa/soa/connectors/DbAdapter.rar
&amp;lt;connection-instance&amp;gt; &amp;lt;jndi-name&amp;gt;eis/DB/CoffeeShop&amp;lt;/jndi-name&amp;gt; &amp;lt;connection-properties&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;XADataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;jdbc/CoffeeShopDS&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;DataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;PlatformClassName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;org.</description>
    </item>
    
  </channel>
</rss>